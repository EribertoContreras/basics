
-- Examples to mirror when working with SQL 
-- ###############################################################------- SQL -------###########################################################################
# --1. Find the country that start with Y

SELECT name FROM world
  WHERE name LIKE 'Y%';

# --2. Find the countries that end with y

SELECT name FROM world
  WHERE name LIKE '%y';

# --3. Find the countries that contain the letter x

SELECT name FROM world
  WHERE name LIKE '%x%';

# --4. Find the countries that end with land

SELECT name FROM world
  WHERE name LIKE '%land';

# --5. Find the countries that start with C and end with ia

SELECT name FROM world
  WHERE name LIKE 'C%ia';

# --6. Find the country that has oo in the name

SELECT name FROM world
  WHERE name LIKE '%oo%';

# --7. Find the countries that have three or more a in the name

SELECT name FROM world
  WHERE name LIKE '%a%a%a%';

# --8. Find the countries that have "t" as the second character.

SELECT name FROM world
 WHERE name LIKE '_t%'
ORDER BY name;

# --9. Find the countries that have two "o" characters separated by two others.

SELECT name FROM world
 WHERE name LIKE '%o__o%';

# --10. Find the countries that have exactly four characters.

SELECT name FROM world
 WHERE name LIKE '____';

# --11. Find the country where the name is the capital city.

SELECT name
  FROM world
 WHERE name = capital;

# --12. Find the country where the capital is the country plus "City".

SELECT name
  FROM world
 WHERE capital = concat(name, ' City');

# --13. Find the capital and the name where the capital includes the name of the country.

SELECT capital,name FROM world WHERE capital LIKE concat('%', name, '%');

# --14. Find the capital and the name where the capital is an extension of name of the country.

SELECT name, capital FROM world WHERE capital LIKE concat('%', name, '%') AND capital > name;

# --15. Show the name and the extension where the capital is an extension of name of the country.

SELECT name, REPLACE(capital, name, '') FROM world WHERE capital LIKE concat('%', name, '%') AND capital > name;

-----------------------------------------------------------------------------------------------------------------------------------------------------------
--1. Read the notes about this table. Observe the result of running a simple SQL command.

SELECT name, continent, population FROM world;

--2. Show the name for the countries that have a population of at least 200 million.

SELECT name FROM world
WHERE population>=200000000;

--3. Give the name and the per capita GDP for those countries with a population of at least 200 million.

SELECT name, gdp/population FROM world WHERE population>200000000;

--4. Show the name and population in millions for the countries of the continent 'South America'.

SELECT name, population/1000000 FROM world WHERE continent = 'South America';

--5. Show the name and population for France, Germany, Italy

SELECT name, population FROM world WHERE name IN ('France', 'Germany', 'Italy');

--6. Show the countries which have a name that includes the word 'United'

SELECT name FROM world WHERE name LIKE '%united%';

--7. Show the countries that are big by area or big by population. Show name, population and area.

SELECT name, population, area FROM world WHERE area > 3000000 OR population > 250000000;

--8. Show the countries that are big by area or big by population but not both. Show name, population and area.

SELECT name, population, area FROM world WHERE (area > 3000000 AND population < 250000000) OR (population > 250000000 AND area < 3000000);

--9. For South America show population in millions and GDP in billions to 2 decimal places.

SELECT name, ROUND(population/1000000, 2), ROUND(gdp/1000000000, 2) FROM world WHERE continent = 'South America';

--10. Show per-capita GDP for the trillion dollar countries to the nearest $1000.

SELECT name, ROUND(gdp/population, -3) FROM world WHERE gdp > 1000000000000;

--11. Show the name and the continent - but substitute Australasia for Oceania - for countries beginning with N.

SELECT name, CASE WHEN continent='Oceania' THEN 'Australasia'
            ELSE continent END
  FROM world
 WHERE name LIKE 'N%';

 --12. Show the name and the continent - but substitute Eurasia for Europe and Asia; substitute America - for each country in North America or South America or Caribbean. Show countries beginning with A or B

SELECT name, CASE 
WHEN continent IN ('Europe', 'Asia') THEN 'Eurasia'
WHEN continent IN ('North America', 'South America', 'Caribbean') THEN 'America'
ELSE continent END
FROM world
WHERE name LIKE 'A%' OR name LIKE 'B%';

--13. Put the continents right...Oceania becomes Australasia Countries in Eurasia and Turkey go to Europe/Asia. Caribbean islands starting with 'B' go to North America, other Caribbean islands go to South America. Show the name, the original continent and the new continent of all countries.

SELECT name, continent, CASE 
WHEN continent = 'Oceania' THEN 'Australasia'
WHEN continent IN ('Eurasia', 'Turkey') THEN 'Europe/Asia'
WHEN continent = 'Caribbean' AND name LIKE 'B%' THEN 'North America'
WHEN continent = 'Caribbean' THEN 'South America'
ELSE continent END
FROM world
ORDER BY name;

-----------------------------------------------------------------------------------------------------------------------------------------------------------
--1. Change the query shown so that it displays Nobel prizes for 1950.

SELECT yr, subject, winner
  FROM nobel
 WHERE yr = 1950;

 --2. Show who won the 1962 prize for Literature.

SELECT winner
  FROM nobel
 WHERE yr = 1962
   AND subject = 'Literature';

--3. Show the year and subject that won 'Albert Einstein' his prize.

SELECT yr, subject FROM nobel WHERE winner = 'Albert Einstein';

--4. Give the name of the 'Peace' winners since the year 2000, including 2000.

SELECT winner FROM nobel WHERE subject = 'Peace' AND yr >= 2000;

--5. Show all details (yr, subject, winner) of the Literature prize winners for 1980 to 1989 inclusive.

SELECT * FROM nobel WHERE subject = 'Literature' AND yr >= 1980 AND yr <= 1989;

--6. Show all details of the presidential winners

SELECT * FROM nobel
 WHERE winner IN ('Theodore Roosevelt',
                  'Woodrow Wilson',
                  'Jimmy Carter');

--7. Show the winners with first name John

SELECT winner FROM nobel WHERE winner LIKE 'John%';

--8. Show the Physics winners for 1980 together with the Chemistry winners for 1984.

SELECT * FROM nobel WHERE subject = 'Physics' AND yr = 1980 OR subject = 'Chemistry' AND yr = 1984;

--9. Show the winners for 1980 excluding the Chemistry and Medicine

SELECT * FROM nobel WHERE yr = 1980 AND subject NOT IN ('Chemistry', 'Medicine');

--10. Show who won a 'Medicine' prize in an early year (before 1910, not including 1910) together with winners of a 'Literature' prize in a later year (after 2004, including 2004)

SELECT * FROM nobel WHERE subject = 'Medicine' AND yr < 1910 OR subject = 'Literature' AND yr >= 2004;

--11. Find all details of the prize won by PETER GRÜNBERG

SELECT * FROM nobel WHERE winner = 'Peter Grünberg';

--12.Find all details of the prize won by EUGENE O'NEILL

SELECT * FROM nobel WHERE winner = 'Eugene O''Neill';

--13. List the winners, year and subject where the winner starts with Sir. Show the the most recent first, then by name order.

Select winner, yr, subject FROM nobel WHERE winner LIKE 'Sir%' ORDER BY yr DESC, winner;

--14. Show the 1984 winners ordered by subject and winner name; but list Chemistry and Physics last.

SELECT winner, subject
  FROM nobel
 WHERE yr=1984
 ORDER BY subject IN ('Physics','Chemistry'), subject,winner;

 -----------------------------------------------------------------------------------------------------------------------------------------------------------

 --1. List each country name where the population is larger than 'Russia'.

SELECT name FROM world
  WHERE population >
     (SELECT population FROM world
      WHERE name='Russia');

--2. Show the countries in Europe with a per capita GDP greater than 'United Kingdom'.

 SELECT name FROM world WHERE gdp/population > (SELECT gdp/population FROM world WHERE name = 'United Kingdom');

--3. List the name and continent of countries in the continents containing either Argentina or Australia. Order by name of the country.

SELECT name, continent FROM world WHERE continent IN (SELECT continent FROM world WHERE name IN ('Argentina', 'Australia')) ORDER BY name;

--4. Which country has a population that is more than Canada but less than Poland? Show the name and the population.
 
SELECT name, population FROM world WHERE population > (SELECT population FROM world WHERE name = 'Canada') AND population < (SELECT population FROM world WHERE name = 'Poland');

--5. Show the name and the population of each country in Europe. Show the population as a percentage of the population of Germany.

SELECT name, CONCAT(ROUND(population/(SELECT population FROM world WHERE name = 'Germany')*100), '%') FROM world WHERE continent = 'Europe';

--6. Which countries have a GDP greater than every country in Europe? [Give the name only.] (Some countries may have NULL gdp values)

SELECT name FROM world WHERE gdp > ALL(SELECT gdp FROM world WHERE gdp > 0 AND continent = 'Europe');

--7. Find the largest country (by area) in each continent, show the continent, the name and the area:

SELECT continent, name, area FROM world x
  WHERE area >= ALL(SELECT area FROM world y WHERE x.continent = y.continent AND y.area>0);

--8. List each continent and the name of the country that comes first alphabetically.

SELECT continent, name FROM world x WHERE name <= ALL(SELECT name FROM world y WHERE x.continent = y.continent);

--9. Find the continents where all countries have a population <= 25000000. Then find the names of the countries associated with these continents. Show name, continent and population.

SELECT name, continent, population FROM world WHERE continent IN (SELECT continent FROM world  x WHERE 25000000 >= (SELECT MAX(population) FROM world y WHERE x.continent = y.continent));
or
SELECT y.name, y.continent, y.population
FROM world AS y
JOIN
(SELECT continent,max(population)
FROM world
GROUP BY continent
HAVING max(population) <= 25000000) AS x
ON y.continent = x.continent

--10. Some countries have populations more than three times that of any of their neighbours (in the same continent). Give the countries and continents.
SELECT name, continent FROM world x
  WHERE population > ALL(SELECT 3*population FROM world y WHERE x.continent = y.continent AND x.name <> y.name)

-----------------------------------------------------------------------------------------------------------------------------------------------------------
--1. Show the total population of the world.

SELECT SUM(population)
FROM world;

--2. List all the continents - just once each.

SELECT DISTINCT continent FROM world;

--3. Give the total GDP of Africa
SELECT SUM(gdp) FROM world WHERE continent = 'Africa';

--4. How many countries have an area of at least 1000000
SELECT COUNT(*) FROM world WHERE area >= 1000000;

--5. What is the total population of ('France','Germany','Spain')

SELECT SUM(population) FROM world WHERE name IN ('France','Germany','Spain');

--6. For each continent show the continent and number of countries.

SELECT continent, COUNT(*) FROM world GROUP BY continent;

--7. For each continent show the continent and number of countries with populations of at least 10 million.

SELECT continent, COUNT(*) FROM world WHERE population >= 10000000 GROUP BY continent;

--8. List the continents that have a total population of at least 100 million.

SELECT continent FROM world x WHERE (SELECT SUM(population) FROM world y WHERE x.continent = y.continent) >= 100000000 GROUP BY continent;
-----------------------------------------------------------------------------------------------------------------------------------------------------------

--1. Show matchid and player name for all goals scored by Germany. teamid = 'GER'

SELECT matchid, player FROM goal 
  WHERE teamid = 'GER';

--2. Show id, stadium, team1, team2 for game 1012

SELECT id, stadium, team1, team2 FROM game WHERE id = 1012;

--3. Show the player, teamid and mdate and for every German goal. teamid='GER'

SELECT goal.player, goal.teamid, game.mdate FROM game JOIN goal ON game.id = goal.matchid WHERE teamid='GER';

--4. Show the team1, team2 and player for every goal scored by a player called Mario player LIKE 'Mario%'

SELECT game.team1, game.team2, goal.player FROM goal JOIN game ON game.id = goal.matchid WHERE goal.player LIKE 'Mario%';

--5. Show player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime<=10

SELECT player, teamid, coach, gtime FROM goal JOIN eteam ON goal.teamid = eteam.id WHERE gtime <= 10;

--6. List the the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.

SELECT mdate, teamname FROM eteam JOIN game ON     
 (eteam.id = game.team1) WHERE coach = 'Fernando Santos';

--7. List the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'

SELECT player FROM game JOIN goal ON id = matchid WHERE stadium = 'National Stadium, Warsaw';

--8. Instead show the name of all players who scored a goal against Germany.

SELECT DISTINCT player
  FROM game JOIN goal ON matchid = id 
    WHERE (team1='GER' OR team2='GER') AND teamid != 'GER';

--9. Show teamname and the total number of goals scored.

SELECT teamname, COUNT(*) FROM goal JOIN eteam ON eteam.id = goal.teamid GROUP BY teamname;

--10. Show the stadium and the number of goals scored in each stadium.

SELECT stadium, COUNT(*) FROM goal JOIN game ON matchid = id GROUP BY stadium;

--11. For every match involving 'POL', show the matchid, date and the number of goals scored.

SELECT matchid,mdate, COUNT(*)
  FROM game JOIN goal ON matchid = id 
 WHERE (team1 = 'POL' OR team2 = 'POL') GROUP BY matchid;

 --12. For every match where 'GER' scored, show matchid, match date and the number of goals scored by 'GER'

SELECT matchid, mdate, COUNT(*) FROM goal JOIN game ON id = matchid WHERE (team1 = 'GER' OR team2 = 'GER') AND teamid = 'GER' GROUP BY matchid;

--13. List every match with the goals scored by each team as shown.

SELECT DISTINCT mdate, team1,
SUM(CASE WHEN teamid=team1 THEN 1 ELSE 0 END) score1, team2, SUM(CASE WHEN teamid=team2 THEN 1 ELSE 0 END) score2
FROM game JOIN goal ON matchid = id
GROUP BY mdate,team1,team2
ORDER BY mdate,team1,team2;

-----------------------------------------------------------------------------------------------------------------------------------------------------------


--1. List the films where the yr is 1962 [Show id, title]

SELECT id, title
 FROM movie
 WHERE yr=1962;

 --2. Give year of 'Citizen Kane'.

SELECT yr FROM movie WHERE title = 'Citizen Kane';

--3. List all of the Star Trek movies, include the id, title and yr (all of these movies include the words Star Trek in the title). Order results by year.

SELECT id, title, yr FROM movie WHERE title LIKE '%Star Trek%' ORDER BY yr;

--4. What are the titles of the films with id 11768, 11955, 21191

SELECT title FROM movie WHERE id IN (11768,11955, 21191); 

--5. What id number does the actress 'Glenn Close' have?

SELECT id FROM actor WHERE name = 'Glenn Close';

--6. What is the id of the film 'Casablanca'

SELECT id FROM movie WHERE title = 'Casablanca';

--7. Obtain the cast list for 'Casablanca'.

SELECT name FROM actor JOIN casting ON id=actorid WHERE movieid = 11768; 

--8. Obtain the cast list for the film 'Alien'

SELECT name FROM actor JOIN casting ON id = actorid WHERE movieid = (SELECT id FROM movie WHERE title = 'Alien');

--9. List the films in which 'Harrison Ford' has appeared

SELECT title FROM movie JOIN casting ON movieid = id WHERE actorid = (SELECT id FROM actor WHERE name = 'Harrison Ford');

--10. List the films where 'Harrison Ford' has appeared - but not in the starring role. [Note: the ord field of casting gives the position of the actor. If ord=1 then this actor is in the starring role]

SELECT title FROM movie JOIN casting ON movieid = id WHERE actorid = (SELECT id FROM actor WHERE name = 'Harrison Ford') AND ord != 1;

--11. List the films together with the leading star for all 1962 films.

SELECT title, name FROM (actor JOIN casting ON  id = actorid) JOIN movie ON movie.id = movieid WHERE ord = 1 AND yr = 1962 GROUP BY title; 

--12. Which were the busiest years for 'John Travolta', show the year and the number of movies he made each year for any year in which he made more than 2 movies.

SELECT yr, COUNT(*) FROM (actor JOIN casting ON actorid = actor.id) JOIN movie ON movieid = movie.id WHERE name = 'John Travolta' GROUP BY yr HAVING COUNT(*) > 2;

--13. List the film title and the leading actor for all of the films 'Julie Andrews' played in.

SELECT title, name
FROM (movie JOIN casting ON movie.id=movieid) JOIN actor on actor.id=actorid
WHERE ord=1 AND title IN(SELECT title
FROM (movie JOIN casting ON movie.id=movieid) JOIN actor on actor.id=actorid
WHERE name='Julie Andrews') AND movie.id IN(SELECT movie.id FROM(movie JOIN casting ON movie.id=movieid) JOIN actor on actor.id=actorid WHERE name='Julie Andrews')
ORDER BY name;

--14. Obtain a list, in alphabetical order, of actors who've had at least 30 starring roles.

SELECT name FROM (actor JOIN casting ON actorid = actor.id) JOIN movie ON movieid = movie.id WHERE ord = 1 AND actor.id = actorid GROUP BY name HAVING count(*) >= 30;

--15. List the films released in the year 1978 ordered by the number of actors in the cast.

SELECT title, COUNT(actorid) FROM (movie JOIN casting ON movieid = movie.id) JOIN actor ON actor.id = actorid WHERE yr = 1978 GROUP BY title ORDER BY COUNT(actorid) DESC, movieid;

--16. List all the people who have worked with 'Art Garfunkel'.
SELECT name FROM (actor JOIN casting ON actorid = actor.id) JOIN movie ON movieid = movie.id WHERE movieid IN (SELECT movieid FROM  (actor JOIN casting ON actorid = actor.id) JOIN movie ON movieid = movie.id WHERE name = 'Art Garfunkel') AND name != 'Art Garfunkel';
-----------------------------------------------------------------------------------------------------------------------------------------------------------
--1. List the teachers who have NULL for their department.

SELECT teacher.name FROM teacher WHERE dept IS NULL;

--2. Note the INNER JOIN misses the teachers with no department and the departments with no teacher.

SELECT teacher.name, dept.name
 FROM teacher JOIN dept
           ON (teacher.dept=dept.id);

--3. Use a different JOIN so that all teachers are listed.

SELECT teacher.name, dept.name FROM teacher LEFT JOIN dept ON (teacher.dept = dept.id);

--4. Use a different JOIN so that all departments are listed.

SELECT teacher.name, dept.name FROM teacher RIGHT JOIN dept ON (teacher.dept = dept.id);

--5. Use COALESCE to print the mobile number. Use the number '07986 444 2266' if there is no number given. Show teacher name and mobile number or '07986 444 2266'

SELECT name, COALESCE(mobile, '07986 444 2266') AS mobile FROM teacher;

--6. Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string 'None' where there is no department.

SELECT teacher.name, COALESCE(dept.name, 'None') AS department FROM teacher LEFT JOIN dept ON dept.id = teacher.dept;

--7. Use COUNT to show the number of teachers and the number of mobile phones.

SELECT COUNT(teacher.name), COUNT(mobile) FROM teacher;

--8. Use COUNT and GROUP BY dept.name to show each department and the number of staff. Use a RIGHT JOIN to ensure that the Engineering department is listed.

SELECT dept.name, COUNT(teacher.name) FROM teacher RIGHT JOIN dept ON dept.id = teacher.dept GROUP BY dept.name;

--9. Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2 and 'Art' otherwise.

SELECT name, CASE WHEN dept IN (1, 2) THEN 'Sci' ELSE 'Art' END FROM teacher;

--10. Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2, show 'Art' if the teacher's dept is 3 and 'None' otherwise.

SELECT name, CASE WHEN dept IN (1, 2) THEN 'Sci' WHEN dept = 3 THEN 'Art' ELSE 'None' END from teacher;
Footer

-----------------------------------------------------------------------------------------------------------------------------------------------------------

--1. How many stops are in the database.

SELECT COUNT(id) AS stops FROM stops;

--2 Find the id value for the stop 'Craiglockhart'

SELECT stop FROM route JOIN stops ON id = stop WHERE stops.name = 'Craiglockhart' GROUP BY stop;

--3. Give the id and the name for the stops on the '4' 'LRT' service.

SELECT DISTINCT stop, stops.name FROM route JOIN stops ON stop = stops.id WHERE num = 4 AND company = 'LRT';

--4. The query shown gives the number of routes that visit either London Road (149) or Craiglockhart (53). Run the query and notice the two services that link these stops have a count of 2. Add a HAVING clause to restrict the output to these two routes.

SELECT company, num, COUNT(*)
FROM route WHERE stop=149 OR stop=53
GROUP BY company, num HAVING COUNT(*) = 2;

--5. Execute the self join shown and observe that b.stop gives all the places you can get to from Craiglockhart, without changing routes. Change the query so that it shows the services from Craiglockhart to London Road.

SELECT a.company, a.num, a.stop, b.stop
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
WHERE a.stop=53 AND b.stop = 149;

--6. The query shown is similar to the previous one, however by joining two copies of the stops table we can refer to stops by name rather than by number. Change the query so that the services between 'Craiglockhart' and 'London Road' are shown. If you are tired of these places try 'Fairmilehead' against 'Tollcross'

SELECT a.company, a.num, stopa.name, stopb.name
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart' AND stopb.name='London Road';

--7. Give a list of all the services which connect stops 115 and 137 ('Haymarket' and 'Leith')

SELECT DISTINCT a.company, a.num FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Haymarket' AND stopb.name='Leith'; 

--8. Give a list of the services which connect the stops 'Craiglockhart' and 'Tollcross'

SELECT DISTINCT a.company, a.num FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart' AND stopb.name='Tollcross'; 

--9. Give a distinct list of the stops which may be reached from 'Craiglockhart' by taking one bus, including 'Craiglockhart' itself, offered by the LRT company. Include the company and bus no. of the relevant services.

SELECT stopb.name, a.company, a.num FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart' AND a.company = 'LRT' ;

-----------------------------------------------------------------------------------------------------------------------------------------------------------
